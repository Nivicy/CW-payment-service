server:
    port: 9090
    servlet:
        context-path: ${var.common.server.servlet.context-path}
spring :
    batch:
        initialize-schema: ALWAYS
        job:
            enabled: false
    cache:
        type: redis
    datasource:
        payment:
            driver-class: org.postgresql.Driver
            jdbc-url: ${var.datasource.payment.url}
            username: ${var.datasource.payment.username}
            password: ${var.datasource.payment.password}
        product:
            driver-class: org.postgresql.Driver
            jdbc-url: ${var.datasource.product.url}
            username: ${var.datasource.product.username}
            password: ${var.datasource.product.password}
    jpa:
        show-sql: true
        generate-ddl: true
        hibernate.ddl-auto: create
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    kafka:
        bootstrap-servers: ${var.common.kafka.boostrap-servers}
        topic: ecom
        consumer:
            group:
                a: timHore
                b: timPekerjaKeras
    redis:
        database: 0
        host: ${var.common.redis.host}
        port: 6379
        username: ${var.common.redis.username}
        password: ${var.common.redis.password}
        timeout: 6000000

integration:
    connect-timeout: 200000
    read-timeout: 200000
    max-total-connections: 200
    default-max-connections-per-route: 100
    connection-request-timeout: 2000
    user-service:
        base-url: ${var.integration.user.base-url}
        check-amount:
            url: ${integration.user-service.base-url}/user/v1/check-amount
        update-amount:
            url: ${integration.user-service.base-url}/user/v1/update-amount

jasypt:
    passwordEncrypt: ${var.common.jasypt.password}